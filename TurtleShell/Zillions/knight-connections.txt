# Use the following script to convert this file in to a Zillions-happy
# format:

fgrep -v '#' knight-connections.txt | tr -d '\015' | grep '(' | awk -F'(' '
{for(a=2;a<=9;a++){if($a && $a !~ /NULL/){k[a]=k[a] "(" $a " "}}} #
END{for(a in k){print "(links k" a-1 " " k[a] ")";print""}}' | fmt #

# Knight paths.  We start at just past noon (for things like F8-E9,
# a line from the center of the originating polygon connects to
# the point in the center of the destination polygon; for G8-F9,
# the point in the middle of F9 is to the right of the point in the
# middle of G8: F9 is .5 + ((3 ^ .5)/2) or 1.35 or so wide, so
# its halfway point is just under .7 over, while G8's halfway
# point is only .5 over), and move
# clockwise

# Cells: We start at the top left, left-to-right top-to-bottom,
# as per the rows defined for Turtle Shell

# NULL means we use the next connection for this cell.
# Note that a knight move is a turtle shell chess knight move, which could
# be seen as a ferz move if this were a square board.
# We have the first connections be NW-NE-SW-SE using the following rules:

# NW:
# 1) Look at all of the possible knight moves from a given cell
# 2) Move left (west) one file like a rook.  
# 3) Only if one is in a cell that occupies two files do the following: 
#    a) If step 4 has not been performed, stay in the same cell, but
#       be in the leftmost file of that cell.
#    b) If step 4 has already been performed, move to the file to the 
#       left of the leftmost file that occupies the starting cell.
# 4) Look up (north) the file and see if there are any possible knight
#    move destinations.  If not (e.g. D1 or D7), go back to step 3.
# 5) Go up (north) this file until one is in the highest (most north)
#    possible cell which is a knight move away from the starting cell.
# 6) Make that cell the NW knight move from the starting cell.

# NE, SW, and SE are similar, but I will spell them out for the sake of 
# clarity:

# NE:
# 1) Look at all of the possible knight moves from a given cell
# 2) Move right (east) one file like a rook.  
# 3) Only if one is in a cell that occupies two files do the following: 
#    a) If step 4 has not been performed, stay in the same cell, but
#       be in the rightmost file of that cell.
#    b) If step 4 has already been performed, move to the file to the 
#       right of the rightmost file that occupies the starting cell.
# 4) Look up (north) the file and see if there are any possible knight
#    move destinations.  If not (e.g. D1 or D7), go back to step 3.
# 5) Go up (north) this file until one is in the highest (most north)
#    possible cell which is a knight move away from the starting cell.
# 6) Make that cell the NE knight move from the starting cell.

# SW:
# 1) Look at all of the possible knight moves from a given cell
# 2) Move left (west) one file like a rook.  
# 3) Only if one is in a cell that occupies two files do the following: 
#    a) If step 4 has not been performed, stay in the same cell, but
#       be in the leftmost file of that cell.
#    b) If step 4 has already been performed, move to the file to the 
#       left of the leftmost file that occupies the starting cell.
# 4) Look down (south) the file and see if there are any possible knight
#    move destinations.  If not (e.g. D2 or D8), go back to step 3.
# 5) Go down (south) this file until one is in the lowest (most south)
#    possible cell which is a knight move away from the starting cell.
# 6) Make that cell the SW knight move from the starting cell.

# SE:
# 1) Look at all of the possible knight moves from a given cell
# 2) Move right (east) one file like a rook.  
# 3) Only if one is in a cell that occupies two files do the following: 
#    a) If step 4 has not been performed, stay in the same cell, but
#       be in the rightmost file of that cell.
#    b) If step 4 has already been performed, move to the file to the 
#       right of the rightmost file that occupies the starting cell.
# 4) Look down (south) the file and see if there are any possible knight
#    move destinations.  If not (e.g. D2 or D8), go back to step 3.
# 5) Go down (south) this file until one is in the lowest (most south)
#    possible cell which is a knight move away from the starting cell.
# 6) Make that cell the SE knight move from the starting cell.

# Row 1
(NULL)  (NULL)  (NULL)  (B9 B8) (B9 C8) 
(NULL)  (NULL)  (C9 B7) (C9 D8) (C9 E8) (C9 B8) 
(NULL)  (NULL)  (D9 C8) (D9 D8) (D9 E9) 
(NULL)  (NULL)  (E8 C8) (E8 F8) (E8 F9) (E8 C9)
(NULL)  (NULL)  (E9 D8) (E9 F8) (E9 D9)
(NULL)  (NULL)  (F9 D8) (F9 G7) (F9 G8) (F9 E8)
(NULL)  (NULL)  (G9 G8) (NULL)  (G9 F8)

# Row 2
(NULL)  (B7 C9) (NULL)  (B7 C6) (B7 C8) (B7 C7) (B7 A6)
(B8 B9) (B8 D8) (B8 B6) (B8 D7) (B8 C9) (B8 C6) 
(C8 B9) (C8 D9) (C8 B7) (C8 D7) (C8 E8) (C8 C7) 
(D8 D9) (D8 E9) (D8 C7) (D8 F7) (D8 F9) (D8 G8) (D8 B8) (D8 C9)
(F8 E8) (F8 G9) (F8 D7) (F8 G7) (F8 F7) (F8 E9)
(G8 D8) (G8 G9) (G8 D7) (G8 G6) (G8 F9) (G8 F6) 
(G7 F9) (NULL)  (G7 F6) (NULL)  (G7 H6) (G7 F7) (G7 F8) 

# Row 3
(C7 D8) (C7 E7) (C7 D6) (C7 B6) (C7 B7) (C7 C8)
(D7 F8) (D7 G8) (D7 F6) (D7 E6) (D7 D6) (D7 C6) (D7 B8) (D7 C8)
(F7 G7) (F7 G6) (F7 E6) (F7 E7) (F7 D8) (F7 F8)

# Row 4
(A6 B7) (A6 C6) (A6 C5)
(B6 B8) (B6 C7) (B6 C5) (B6 A5)
(C6 B8) (C6 D7) (C6 E7) (C6 D5) (C6 B5) (C6 A5) (C6 A6) (C6 B7)
(D6 D7) (D6 E6) (D6 E5) (D6 B5) (D6 C5) (D6 C7)
(E7 F7) (E7 F6) (E7 E5) (E7 D5) (E7 C6) (E7 C7)
(E6 F7) (E6 F5) (E6 G5) (E6 D5) (E6 D6) (E6 D7)
(F6 G7) (F6 H6) (F6 H5) (F6 G5) (F6 E5) (F6 E7) (F6 D7) (F6 G8)
(G6 H5) (G6 F5) (G6 F7) (G6 G8)
(H6 F5) (H6 F6) (H6 G7)

# Row 5
(A5 B6) (A5 C6) (A5 B5) (A5 C4)
(C5 D6) (C5 D5) (C5 C4) (C5 A4) (C5 A6) (C5 B6)
(B5 D6) (B5 D3) (B5 C3) (B5 A4) (B5 A5) (B5 C6)
(D5 E7) (D5 E6) (D5 E3) (D5 E2) (D5 C3) (D5 C4) (D5 C5) (D5 C6)
(E5 F6) (E5 F5) (E5 F4) (E5 F3) (E5 E2) (E5 D3) (E5 D6) (E5 E7)
(G5 H5) (G5 H4) (G5 F3) (G5 E3) (G5 E6) (G5 F6)
(F5 G6) (F5 H6) (F5 H4) (F5 F4) (F5 E5) (F5 E6)
(H5 F4) (H5 G5) (H5 F6) (H5 G6)

# Row 6
(A4 C5) (A4 B5) (A4 C3) (A4 B3)
(C4 D5) (C4 D3) (C4 B3) (C4 A3) (C4 A5) (C4 C5)
(F4 H5) (F4 H3) (F4 G3) (F4 E3) (F4 E5) (F4 F5)
(H4 G3) (H4 F3) (H4 G5) (H4 F5)

# Row 7
(A3 C4) (A3 C3) (A3 B1)
(B3 C4) (B3 C2) (B3 B2) (B3 A4)
(C3 D5) (C3 E2) (C3 D2) (C3 B2) (C3 B1) (C3 A3) (C3 A4) (C3 B5)
(D3 E5) (D3 E3) (D3 D2) (D3 C2) (D3 C4) (D3 B5)
(E2 E5) (E2 F3) (E2 F2) (E2 C2) (E2 C3) (E2 D5)
(E3 G5) (E3 F4) (E3 F2) (E3 D2) (E3 D3) (E3 D5) 
(F3 G5) (F3 H4) (F3 H3) (F3 G1) (F3 G2) (F3 D2) (F3 E2) (F3 E5)
(G3 H4) (G3 G2) (G3 F2) (G3 F4)
(H3 G1) (H3 F3) (H3 F4) 

# Row 8
(B1 C3) (B1 C2) (B1 C1) (B1 C0) (B1 A3)
(B2 D2) (B2 D1) (B2 C0) (B2 B0) (B2 B3) (B2 C3)
(C2 D3) (C2 E2) (C2 D1) (C2 C1) (C2 B1) (C2 B3)
(D2 E3) (D2 F3) (D2 G2) (D2 F1) (D2 C1) (D2 B2) (D2 C3) (D2 D3)
(F2 G3) (F2 G1) (F2 F1) (F2 D1) (F2 E2) (F2 E3)
(G2 F3) (G2 G3) (G2 G0) (G2 F0) (G2 D1) (G2 D2)
(G1 H3) (G1 F0) (G1 F1) (G1 F2) (G1 F3)

# Row 9
(C1 D2) (C1 E1) (C1 D0) (C1 B0) (C1 B1) (C1 C2)
(D1 F2) (D1 G2) (D1 F0) (D1 E0) (D1 D0) (D1 C0) (D1 B2) (D1 C2)
(F1 G1) (F1 G0) (F1 E0) (F1 E1) (F1 D2) (F1 F2)

# Row 10
(B0 B2) (B0 C1)
(C0 D1) (C0 E1) (C0 B1) (C0 B2)
(D0 D1) (D0 E0) (D0 C1)
(E1 F1) (E1 F0) (E1 C0) (E1 C1)
(E0 F1) (E0 D0) (E0 D1)
(F0 G1) (F0 E1) (F0 D1) (F0 G2)
(G0 F1) (G0 G2)

