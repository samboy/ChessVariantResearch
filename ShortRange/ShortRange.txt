== A binary representation ==

Let’s look at all possible pieces where a piece can go within two
sqaures in a square board chess variant.  The grid will be this:

- - - - -
- - - - -
- - X - -
- - - - -
- - - - -

A knight, for example, is this:

- O - O -
O - - - O
- - X - -
O - - - O
- O - O -

There are 24 possible squares a piece can go to.  Lets give them numbers:

01 02 03 04 05
06 07 08 09 10
11 12 -- 13 14
15 16 17 18 19
20 21 22 23 24

So, a knight would be 02,04,06,10,16,19,21,23

Let’s make that a 24-bit binary number.  01 is the least significant
digit, 02 is the second least significant digit, 03 the third least
significant digit, and so on.  A knight would look like this in
Python syntax for binary literals:

0b010101000100001000101010

Or, in hex:

0x54422a

Now that we can convert short-range pieces in to a 24-bit binary
number, let’s look at a limitation many of these pieces have.

== Colorbound ==

A bishop in standard chess is *Colorbound*: It can only reach some,
but not all squares on the chess board.

With Bishops, the piece can only hit squares of a given checker color.  
There are other possible forms of a piece which moves in the 5x5 square
around it being colorbound.  This is an incomplete list:

* A piece can only hit squares of a given color on the board
* A piece can only hit every other row on the board
* A piece can only hit every other file on the board
* A piece can not move backwards
* A piece can not move forwards
* A piece can not move left
* A piece can not move right
* Missing NW, NE, SW, or SE movement
* 3-way “staircase” colorbound
* “Pinwheels” are 5-way colorbound
* Some others I have not discovered yet
* Some combination of the above limitations

To determine whether a piece is one of the above types of colorbound
piece, we take the binary representation of the piece, run a binary
(bitwise) or against it and a given mask, and see if the resulting
number has the same value as the mask.  If it does, then the piece is
colorbound in the given manner.

Even if a piece passes all of the above tests, it may still
be colorbound.  Let’s look at one such example:

O O - - -
- - - - O
- - X - -
O - - - -
- - - - -

The masks so far are:

Checker color (bishop) restriction:

01 -- 03 -- 05
-- 07 -- 09 --
11 -- XX -- 14
-- 16 -- 18 --
20 -- 22 -- 24

0b101010101010010101010101
0xaaa555

Every other row:

01 02 03 04 05
-- -- -- -- --
11 12 XX 13 14
-- -- -- -- --
20 21 22 23 24

0b111110000011110000011111
0xf83c1f

Every other file:

01 -- 03 -- 05
06 -- 08 -- 10
11 -- XX -- 14
15 -- 17 -- 19
20 -- 22 -- 24

0b101011010110011010110101
0xad66b5

No backwards move:

01 02 03 04 05
06 07 08 09 10
11 12 XX 13 14
-- -- -- -- --
-- -- -- -- --

0b000000000011111111111111
0x3fff

No forward move:

-- -- -- -- --
-- -- -- -- --
11 12 XX 13 14
15 16 17 18 19
20 21 22 23 24

0b111111111111110000000000
0xfffc00

No left move:

-- -- 03 04 05
-- -- 08 09 10
-- -- XX 13 14
-- -- 17 18 19
-- -- 22 23 24

0b111001110011001110011100
0xe7339c

No right move:

01 02 03 -- --
06 07 08 -- --
11 12 XX -- --
15 16 17 -- --
20 21 22 -- --

0b001110011100110011100111
0x39cce7

No SE move:

01 02 03 04 05
06 07 08 09 --
11 12 XX -- --
15 16 -- -- --
20 -- -- -- --

0b000010001100110111111111
0x8cdff

No NW move:

-- -- -- -- 05
-- -- -- 09 10
-- -- XX 13 14
-- 16 17 18 19
20 21 22 23 24

0b111111111011001100010000
0xffb310

No SW move:

01 02 03 04 05
-- 07 08 09 10
-- -- XX 13 14
-- -- -- 18 19
-- -- -- -- 24

0b100001100011001111011111
0x8633df

No NE move:

01 -- -- -- --
06 07 -- -- --
11 12 XX -- --
15 16 17 18 --
20 21 22 23 24

0b111110111100110001100001
0xfbcc61

3-way colorbound A:

01 -- -- 04 --
-- 07 -- -- 10
-- -- XX -- --
15 -- -- 18 --
-- 21 -- -- 24

0b100100100100001001001001
0x924249

3-way colorbound B:

-- 02 -- -- 05
06 -- -- 09 --
-- -- XX -- --
-- 16 -- -- 19
20 -- -- 23 --

0b010011001000000100110010
0x4c8132

Pinwheel 1:

-- 02 -- -- --
-- -- -- -- 10
-- -- XX -- --
15 -- -- -- --
-- -- -- 23 --

Pinwheel 2:

-- -- -- 04 --
06 -- -- -- --
-- -- XX -- --
-- -- -- -- 19
-- 21 -- -- --

There’s others, but I don’t think I will find all of the possible 
colobound pieces.

== Semi-pinwheel, not colorbound ==

While looking for colorbound pieces, I found an interesting 
non-colorbound piece:

O - - - -
- - - - O
- - X - -
O - - - -
- - - O -

Here is the number of moves to get to a given square on an 8x8 board,
starting at “0”.  We will use hex numbers (“A” is 10, etc.):

2 D B 9 7 5 3 E
A 8 6 4 2 D B 9
5 3 1 C A 8 6 4
2 B 9 7 5 3 1 C
A 6 4 2 0 B 9 7
5 3 1 A 8 6 4 2
2 B 7 5 3 1 C A
8 6 4 2 B 9 7 5

Using the above notation for a piece:

01 -- -- -- --
-- -- -- -- 10
-- -- XX -- --
15 -- -- -- --
-- -- -- 23 --

0b010000000100001000000001
0x404201

== Superset of known non-colorbound pieces ==

If the goal is to just find a lot, if not all, non-colorbound
pieces in a 5x5 grid, that’s far easier to do.  Let’s just look
at three non-colorbound atoms:

Wazir:

-- -- -- -- --
-- -- 08 -- --
-- 12 XX 13 --
-- -- 17 -- --
-- -- -- -- --

0b000000010001100010000000
0x11880

Crab:

-- 02 -- 04 --
-- -- -- -- --
-- -- XX -- --
15 -- -- -- 19
-- -- -- -- --

0b000001000100000000001010
0x4400a

Y:

-- -- -- -- --
-- 07 -- 09 --
-- -- XX -- --
-- -- 17 -- --
-- -- -- -- --

0b000000010000000101000000
0x10140

Note that 90 degree rotations of the Crab and Y will also be 
non-colorbound, but we will not look at those, nor will we look
at stuff like the semi-pinwheel discussed above.

